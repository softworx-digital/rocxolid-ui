@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $color;
        -moz-box-shadow:inset $top $left $blur $color;
        box-shadow:inset $top $left $blur $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $color;
        -moz-box-shadow: $top $left $blur $color;
        box-shadow: $top $left $blur $color;
    }
}

@mixin text-shadow($top, $left, $blur, $color) {
    -webkit-text-shadow: $top $left $blur $color;
    -moz-text-shadow: $top $left $blur $color;
    text-shadow: $top $left $blur $color;
}

@mixin text-outline($width, $color) {
    text-shadow: (-$width) (-$width) 0 $color,
                   $width  (-$width) 0 $color,
                 (-$width)   $width  0 $color,
                   $width    $width  0 $color;
}

@mixin text-overflow() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;

    &:hover {
        overflow: visible;
        white-space: unset;
        overflow-wrap: break-word;
        word-wrap: break-word;
        -ms-word-break: break-all;
        word-break: break-all;
        word-break: break-word;
        -ms-hyphens: auto;
        -moz-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;
    }
}

@mixin text-field {
    display: inline-block;
    outline: none;
    text-decoration: none;
    font: 14px/100% Arial, Helvetica, sans-serif;
    padding: .5em;
    text-shadow: 0 1px 1px rgba(0,0,0,.3);
    @include rounded();
    @include box-shadow(0, 1px, 2px, rgba(0, 0, 0, 0.2));
}

@mixin button($color: $red, $text_color: $white) {
    display: inline-block;
    outline: none;
    cursor: pointer;
    text-align: center;
    text-decoration: none;
    font: 14px/100% Arial, Helvetica, sans-serif;
    padding: .5em 2em .55em;
    text-shadow: 0 1px 1px rgba(0,0,0,.3);
    @include rounded();
    @include box-shadow(0, 1px, 2px, rgba(0, 0, 0, 0.2));

    color: $text_color !important;
    font-weight: bold;
    border: solid 1px darken($color, 18%);
    background: $color;
    @include gradient(saturate($color, 15%), darken($color, 15%));

    &:hover {
        text-decoration: none;
        background: saturate($color, 10%);
        @include gradient(saturate($color, 5%), darken($color, 5%));
    }

    &:active {
        position: relative;
        top: 1px;
        color: saturate($color, 15%);
        @include gradient(saturate($color, 15%), lighten($color, 15%));
    }
}

@mixin rounded($radius: 0.5em) {
    -webkit-border-radius: $radius;
    -moz-border-radius: $radius;
    border-radius: $radius;
}

@mixin rounded-top($radius: 0.5em) {
    -webkit-border-radius: $radius $radius 0 0;
    -moz-border-radius: $radius $radius 0 0;
    border-radius: $radius $radius 0 0;
}

@mixin rounded-bottom($radius: 0.5em) {
    -webkit-border-radius: 0 0 $radius $radius;
    -moz-border-radius: 0 0 $radius $radius;
    border-radius: 0 0 $radius $radius;
}

@mixin rounded-left($radius: 0.5em) {
    -webkit-border-radius: $radius 0 0 $radius;
    -moz-border-radius: $radius 0 0 $radius;
    border-radius: $radius 0 0 $radius;
}

@mixin rounded-right($radius: 0.5em) {
    -webkit-border-radius: 0 $radius $radius 0;
    -moz-border-radius: 0 $radius $radius 0;
    border-radius: 0 $radius $radius 0;
}

@mixin gradient($from, $to) {
    background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
    background: -moz-linear-gradient(top,    $from, $to);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

@mixin transition($transition...) {
    -moz-transition:    $transition;
    -o-transition:      $transition;
    -webkit-transition: $transition;
    transition:         $transition;
}

@mixin transition-property($property...) {
    -moz-transition-property:    $property;
    -o-transition-property:      $property;
    -webkit-transition-property: $property;
    transition-property:         $property;
}

@mixin transition-duration($duration...) {
    -moz-transition-property:    $duration;
    -o-transition-property:      $duration;
    -webkit-transition-property: $duration;
    transition-property:         $duration;
}

@mixin transition-timing-function($timing...) {
    -moz-transition-timing-function:    $timing;
    -o-transition-timing-function:      $timing;
    -webkit-transition-timing-function: $timing;
    transition-timing-function:         $timing;
}

@mixin transition-delay($delay...) {
    -moz-transition-delay:    $delay;
    -o-transition-delay:      $delay;
    -webkit-transition-delay: $delay;
    transition-delay:         $delay;
}

@mixin blurred($radius: 5px) {
    -webkit-filter: blur($radius);
    -moz-filter: blur($radius);
    -o-filter: blur($radius);
    -ms-filter: blur($radius);
    filter: blur($radius);
}